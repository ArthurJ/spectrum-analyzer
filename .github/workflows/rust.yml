name: Build

# Triggers the workflow on push or pull request events (for any branch in a repository)
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - 1.55.0 # MSRV for tests
    steps:
      - uses: actions/checkout@v2
      - name: Install package libasound2-dev
        run: sudo apt-get -y install libasound2-dev

      # build with all features/fft implementations
      - run: cargo build --all-targets
      - run: cargo build --all-targets --no-default-features --features "rustfft-complex"
      - run: cargo build --all-targets --no-default-features --features "microfft-complex"
      - run: cargo build --all-targets --no-default-features --features "microfft-real"

      # run tests with all features/fft implementations
      - run: cargo test --all-targets
      - run: cargo test --all-targets --no-default-features --features "rustfft-complex"
      - run: cargo test --all-targets --no-default-features --features "microfft-complex"
      - run: cargo test --all-targets --no-default-features --features "microfft-real"

      # test `no_std`-build with all features/fft implementations
      - run: rustup target add thumbv7em-none-eabihf
      - run: cargo check --target thumbv7em-none-eabihf --no-default-features --features "microfft-complex"
      - run: cargo check --target thumbv7em-none-eabihf --no-default-features --features "microfft-real"

      # run examples with all features/fft implementations
      - run: cargo run --release --example mp3-samples
      - run: cargo run --release --example mp3-samples --no-default-features --features "rustfft-complex"
      - run: cargo run --release --example mp3-samples --no-default-features --features "microfft-complex"
      - run: cargo run --release --example mp3-samples --no-default-features --features "microfft-real"

  style_checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v2
      - name: Rustfmt
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy --features all
      - name: Rustdoc
        run: cargo doc --features all
